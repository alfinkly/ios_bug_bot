from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.i18n import I18n

from database.models import User
from services.telegram.filters.role import RoleFilter
from services.telegram.misc.callbacks import HomeCallback
from services.telegram.misc.keyboards import Keyboards

router = Router()
router.message.filter(RoleFilter(roles=["admin", "user"]))
router.callback_query.filter(RoleFilter(roles=["admin", "user"]))


@router.message(F.text == "–ì–ª–∞–≤–Ω–∞—è")
@router.message(Command("start"))
async def home(message: Message, user: User, i18n: I18n):
    await message.answer(i18n.gettext("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{}üôÇü§ùüèº"
                                      "\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º —Å–±–æ–µ–≤"
                                      "\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é üî¨",
                                      locale=user.lang).format(user.username),
                         reply_markup=Keyboards.home(i18n, user)
                         )


@router.callback_query(HomeCallback.filter(F.action == "instruction"))
async def instruction(callback: CallbackQuery, user, i18n: I18n):
    await callback.message.edit_text(
        i18n.gettext("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ Panic –∑–∞—Ö–æ–¥–∏–º –≤:\n"
                     "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ¬ª –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ¬ª –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è ¬ª –î–∞–Ω–Ω—ã–µ –ê–Ω–∞–ª–∏—Ç–∏–∫–∏‚Ä¶\n"
                     "–î–∞–ª–µ–µ –Ω–∞—Ö–æ–¥–∏–º –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º panic-full –∏ –¥–µ–ª–∏–º—Å—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≥–¥–µ —Ä–∞–±–æ—Ç–∞–µ—Ç "
                     "–Ω–∞—à –±–æ—Ç (–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ "
                     "–ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤ panic)",
                     locale=user.lang),
        reply_markup=Keyboards.back_to_home(i18n, user)
    )


@router.callback_query(HomeCallback.filter(F.action == "back_to_home"))
async def instruction(callback: CallbackQuery, user: User, i18n: I18n):
    await callback.message.edit_text(i18n.gettext("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{}üôÇü§ùüèº"
                                                  "\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –∞–Ω–∞–ª–∏–∑–æ–º —Å–±–æ–µ–≤"
                                                  "\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é üî¨",
                                                  locale=user.lang).format(user.username),
                                     reply_markup=Keyboards.home(i18n, user)
                                     )


@router.message(F.text == "alfinkly")
async def info(message: Message, user, i18n: I18n):
    await message.answer(i18n.gettext("–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å... –∂–∏–≤?", locale=user.lang))


@router.callback_query(F.data == "nothing")
async def nothing(callback: CallbackQuery):
    await callback.answer()
