from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from database.models import User
from services.telegram.misc.callbacks import HomeCallback
from services.telegram.misc.keyboards import Keyboards

router = Router()


@router.message(F.text == "–ì–ª–∞–≤–Ω–∞—è")
@router.message(Command("start"))
async def home(message: Message, user: User):
    # TODO –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ Texts
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{user.username}üôÇü§ùüèº "
        f"\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Å–±–æ–µ–≤"
        f"\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é üî¨",
        reply_markup=Keyboards.home()
    )


@router.callback_query(HomeCallback.filter(F.action == "instruction"))
async def instruction(callback: CallbackQuery):
    # TODO –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ Texts
    await callback.message.edit_text(
        f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" * 20,
        reply_markup=Keyboards.back_to_home()
    )


@router.callback_query(HomeCallback.filter(F.action == "back_to_home"))
async def instruction(callback: CallbackQuery, user: User):
    # TODO –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ Texts
    await callback.message.edit_text(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{user.username}üôÇü§ùüèº "
        f"\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –∞–Ω–∞–ª–∏–∑ —Å–±–æ–µ–≤"
        f"\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é üî¨",
        reply_markup=Keyboards.home()
    )


@router.message(F.text == "alfinkly")
async def info(message: Message):
    await message.answer(f"–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∂–∏–≤?")


@router.callback_query(F.data == "nothing")
async def nothing(callback: CallbackQuery):
    await callback.answer()
